---
import type {Page, CollectionEntry} from "astro:content";

import FormattedDate from "../components/FormattedDate.astro";
import Link from "../components/Link.astro";
import Pagination from "../components/Pagination.astro";
import RootLayout from "./RootLayout.astro";
import Tag from "../components/Tag.astro";

interface Props {
    title: string;
    description: string;
    page: Page<CollectionEntry<'blog'>[]>;
}

const {title, description, page} = Astro.props;
const hasDefaultSlot = Astro.slots.has('default');

export const prerender = true;
---

<RootLayout {title} {description}>
    <div class="retro-container">
        <pre class="ascii-divider">
 /=======================\
 |    SYSTEM ARCHIVES    |
 \=======================/
        </pre>
        
        <div class="space-y-2 pb-8 pt-6">
            <h1 class="text-3xl font-mono text-terminal-bright">
                > {title}
            </h1>
            {hasDefaultSlot && (
                <div class="prose font-mono text-terminal-dim py-4">
                    <slot/>
                </div>
            )}
        </div>
        
        <div class="border-t border-terminal-green">
            {!page.data.length && (
                <pre class="text-terminal-dim p-4">
ERROR: No posts found in database
                </pre>
            )}
            
            <ul class="divide-y divide-terminal-dim">
                {page.data.map(({slug, data: {date, title, summary, tags}}) => (
                    <li class="p-4">
                        <article class="space-y-2 xl:grid xl:grid-cols-4 xl:items-baseline xl:space-y-0">
                            <dl>
                                <dt class="sr-only">Published on</dt>
                                <dd class="font-mono text-terminal-dim">
                                    <FormattedDate date={date}/>
                                </dd>
                            </dl>
                            <div class="space-y-3 xl:col-span-3">
                                <div>
                                    <h3 class="text-2xl font-mono">
                                        <Link href={`/blog/${slug}`} class="retro-link">
                                            {title}
                                        </Link>
                                    </h3>
                                    <div class="flex flex-wrap gap-2 mt-2">
                                        {tags.map(({slug}) => (
                                            <Tag slug={slug}/>
                                        ))}
                                    </div>
                                </div>
                                <div class="font-mono text-terminal-dim">
                                    {summary}
                                </div>
                            </div>
                        </article>
                    </li>
                ))}
            </ul>
        </div>
        
        {(page.url.next || page.url.prev) && (
            <div class="border-t border-terminal-green p-4">
                <Pagination page={page}/>
            </div>
        )}
    </div>
</RootLayout>
