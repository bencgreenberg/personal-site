---
import { Image } from "astro:assets";
import SectionContainer from "../components/SectionContainer.astro";
import PageTitle from "../components/PageTitle.astro";
import Link from "../components/Link.astro";
import RootLayout from "./RootLayout.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Tag from "../components/Tag.astro";
import ScrollTopAndComments from "../components/ScrollTopAndComments.astro";
import { getAuthor, getTags } from "../db/couchbase";
import { marked } from 'marked';


interface Props {
  post: any;
  next?: any;
  prev?: any;
}

const { post, next, prev } = Astro.props as Props;
const authors = await Promise.all(post.authors.map((author) => getAuthor(`authors_${author}`)));
const tags = await Promise.all(post.tags.map((tag) => getTags(tag)));

const content = post.content ? post.content : "";
---

<RootLayout title={post.title} description={post.summary}>
  <SectionContainer>
    <ScrollTopAndComments />
    <article>
      <div class="xl:divide-y xl:divide-gray-200 xl:dark:divide-gray-700">
        <header class="pt-6 xl:pb-6">
          <div class="space-y-1 text-center">
            <dl class="space-y-10">
              <div>
                <dt class="sr-only">Published on</dt>
                <dd class="text-base font-medium leading-6 text-gray-500 dark:text-gray-400">
                  <FormattedDate date={post.date} />
                </dd>
              </div>
            </dl>
            <div>
              <PageTitle>{post.title}</PageTitle>
            </div>
          </div>
        </header>
        <div class="grid-rows-[auto_1fr] divide-y divide-gray-200 pb-8 dark:divide-gray-700 xl:grid xl:grid-cols-4 xl:gap-x-6 xl:divide-y-0">
          <dl class="pb-10 pt-6 xl:border-b xl:border-gray-200 xl:pt-11 xl:dark:border-gray-700">
            <dt class="sr-only">Authors</dt>
            <dd>
              <ul class="flex flex-wrap justify-center items-center gap-4 sm:space-x-12 xl:block xl:space-x-0 xl:space-y-8">
                {authors.map(({ id, name, avatar, twitter }) => (
                  <li class="flex items-center space-x-2" key={id}>
                    {avatar && (
                      <Image src={avatar} width={38} height={38} alt="avatar" class="h-10 w-10 rounded-full" />
                    )}
                    <dl class="whitespace-nowrap text-sm font-medium leading-5">
                      <dt class="sr-only">Name</dt>
                      <dd class="text-gray-900 dark:text-gray-100">{name}</dd>
                      <dt class="sr-only">Twitter</dt>
                      <dd>
                        {twitter && (
                          <Link href={twitter} class="text-primary-500 hover:text-primary-600 dark:hover:text-primary-400">
                            {twitter.replace("https://twitter.com/", "@")}
                          </Link>
                        )}
                      </dd>
                    </dl>
                  </li>
                ))}
              </ul>
            </dd>
          </dl>
          <div class="divide-y divide-gray-200 dark:divide-gray-700 xl:col-span-3 xl:row-span-2 xl:pb-0">
            <div class="prose max-w-none pb-8 pt-10 dark:prose-invert">
                <p set:html={marked.parse(content)} />
            </div>
          </div>
          <footer>
            <div class="divide-gray-200 text-sm font-medium leading-5 dark:divide-gray-700 xl:col-start-1 xl:row-start-2 xl:divide-y">
              {tags.length > 0 && (
                <div class="py-4 xl:py-8">
                  <h2 class="text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400">Tags</h2>
                  <div class="flex flex-wrap">
                    {tags.map((tag) => (
                      <Tag tag={tag} key={tag.id} />
                    ))}
                  </div>
                </div>
              )}
              {(next || prev) && (
                <div class="flex justify-between py-4 xl:block xl:space-y-8 xl:py-8">
                  {prev && (
                    <div>
                      <h2 class="text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400">Previous Article</h2>
                      <div class="text-primary-500 hover:text-primary-600 dark:hover:text-primary-400">
                        <Link href={`/blog/${prev.id}`}>{prev.title}</Link>
                      </div>
                    </div>
                  )}
                  {next && (
                    <div>
                      <h2 class="text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400">Next Article</h2>
                      <div class="text-primary-500 hover:text-primary-600 dark:hover:text-primary-400">
                        <Link href={`/blog/${next.id}`}>{next.title}</Link>
                      </div>
                    </div>
                  )}
                </div>
              )}
            </div>
            <div class="pt-4 xl:pt-8">
              <Link href="/blog" class="text-primary-500 hover:text-primary-600 dark:hover:text-primary-400" aria-label="Back to the blog">
                &larr; Back to the blog
              </Link>
            </div>
          </footer>
        </div>
      </div>
    </article>
  </SectionContainer>
</RootLayout>